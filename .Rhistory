library("R2jags")
library("readxl")
library("fitdistrplus")
library("tidyverse")
set.seed(42)
setwd("/Users/marco/dev/stochastic_processes/")
data <- read_excel("data.xlsx")
data <- select(data, -1)  # Drop first
# Create the cumulative data for all five series
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
# Plottinng the count SPI graphs
plot(stepfun(1:(length(SPI_counted$`1 mês`)-1), SPI_counted$`1 mês`), cex.points = 0.1, lwd=0, main="Count SPI for 1 month")
plot(stepfun(1:(length(SPI_counted$`3 meses`)-1), SPI_counted$`3 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 3 months")
plot(stepfun(1:(length(SPI_counted$`6 meses`)-1), SPI_counted$`6 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 6 months")
plot(stepfun(1:(length(SPI_counted$`12 meses`)-1), SPI_counted$`12 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 12 months")
# Parameters to be estimated
plp.mod.params <- c("alpha1", "sigma1")
# Provide the data (for `1 mês` series)
y <- SPI_counted$`1 mês`
plp.mod.data <- list("y", "N")
# Define model
plp.mod <- function() {
# Likelihood
for (i in 1:N) {
# Lambdas
# lambda[i] <- (alpha1/sigma1) * ((i/sigma1)**(alpha1-1))
mean_i <- (i/sigma1)**alpha1
y[i] ~ dpois(mean_i)
}
# Prior
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
# Fit model
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
#inits = plp.mod.inits,
n.chains = 3, n.iter = 15000,
n.burnin = 10000, model.file = plp.mod)
library("R2jags")
library("readxl")
library("fitdistrplus")
library("tidyverse")
set.seed(42)
setwd("/Users/marco/dev/stochastic_processes/")
data <- read_excel("data.xlsx")
data <- select(data, -1)  # Drop first
# Create the cumulative data for all five series
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
# Plottinng the count SPI graphs
plot(stepfun(1:(length(SPI_counted$`1 mês`)-1), SPI_counted$`1 mês`), cex.points = 0.1, lwd=0, main="Count SPI for 1 month")
plot(stepfun(1:(length(SPI_counted$`3 meses`)-1), SPI_counted$`3 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 3 months")
plot(stepfun(1:(length(SPI_counted$`6 meses`)-1), SPI_counted$`6 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 6 months")
plot(stepfun(1:(length(SPI_counted$`12 meses`)-1), SPI_counted$`12 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 12 months")
# Parameters to be estimated
plp.mod.params <- c("alpha1", "sigma1")
# Provide the data (for `1 mês` series)
y <- SPI_counted$`1 mês`
plp.mod.data <- list("y", "N")
# Define model
plp.mod <- function() {
# Likelihood
for (i in 1:N) {
# Lambdas
# lambda[i] <- (alpha1/sigma1) * ((i/sigma1)**(alpha1-1))
y[i] ~ dpois((i/sigma1)**alpha1)
}
# Prior
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
# Fit model
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
#inits = plp.mod.inits,
n.chains = 3, n.iter = 15000,
n.burnin = 10000, model.file = plp.mod)
plot(plp.mod.fit)
print(plp.mod.fit)
library("R2jags")
library("readxl")
library("fitdistrplus")
library("tidyverse")
set.seed(42)
setwd("/Users/marco/dev/stochastic_processes/")
data <- read_excel("data.xlsx")
data <- select(data, -1)  # Drop first
# Create the cumulative data for all five series
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
# Plottinng the count SPI graphs
plot(stepfun(1:(length(SPI_counted$`1 mês`)-1), SPI_counted$`1 mês`), cex.points = 0.1, lwd=0, main="Count SPI for 1 month")
plot(stepfun(1:(length(SPI_counted$`3 meses`)-1), SPI_counted$`3 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 3 months")
plot(stepfun(1:(length(SPI_counted$`6 meses`)-1), SPI_counted$`6 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 6 months")
plot(stepfun(1:(length(SPI_counted$`12 meses`)-1), SPI_counted$`12 meses`), cex.points = 0.1, lwd=0, main="Count SPI for 12 months")
# Parameters to be estimated
plp.mod.params <- c("alpha1", "sigma1")
# Provide the data (for `1 mês` series)
y <- SPI_counted$`1 mês`
plp.mod.data <- list("y", "N")
# Define model
plp.mod <- function() {
# Likelihood
for (i in 1:N) {
y[i] ~ dpois((i/sigma1)**alpha1)
}
# Prior
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
# Fit model
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
#inits = plp.mod.inits,
n.chains = 3, n.iter = 20000,
n.burnin = 10000, model.file = plp.mod)
plot(plp.mod.fit)
print(plp.mod.fit)
getwd
getwd()
