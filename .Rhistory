plp.mod.params <- c("alpha1", "sigma1", "alpha2", "sigma2", "tau1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
(i/sigma1)**alpha1,
(tau1/sigma1)**alpha1
+ (i/sigma2)**alpha2
- (tau1/sigma2)**alpha2
)
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
alpha2 ~ dunif(1e-5, 100)
sigma2 ~ dunif(1e-5, 100)
tau1 ~ dunif(0,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
sigma2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma2"]]
alpha2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha2"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
c("alpha1" = alpha1, "sigma1" = sigma1, "alpha2" = alpha2,
"sigma2" = sigma2, "tau1" = tau1)
}
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 15000)
plot_data_and_mean_1_cp <- function(current_cumulative, params) {
alpha1 <- params["alpha1"]
alpha2 <- params["alpha2"]
sigma1 <- params["sigma1"]
sigma2 <- params["sigma2"]
tau1 <- params["tau1"]
mean_to_tau <- function(t) { (t/sigma1)**alpha1 }
mean_to_end <- function(t) { ((tau1/sigma1)**alpha1+(t/sigma2)**alpha2-(tau1/sigma2)**alpha2) }
mean_1_cp <- c()
for (i in 1:length(current_cumulative)) {
mean_1_cp <- c(mean_1_cp, ifelse(i <= tau1, mean_to_tau(i), mean_to_end(i)))
}
plot(0,0,xlim = c(0,N), ylim = c(0, max(current_cumulative)), type = "n", main = "")
lines(stepfun(1:(length(current_cumulative)-1), current_cumulative),cex.points = 0.1, lwd=0, col = "#000000")
lines(stepfun(1:(length(mean_1_cp)-1),mean_1_cp), cex.points = 0.1, lwd=0, col = "#FF0000")
}
plot_data_and_mean_1_cp(current_cumulative, params_1cp)
plot_data_and_mean_1_cp(current_cumulative, params)
estimate_model_with_one_changepoint <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1", "alpha2", "sigma2", "tau1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
(i/sigma1)**alpha1,
(tau1/sigma1)**alpha1
+ (i/sigma2)**alpha2
- (tau1/sigma2)**alpha2
)
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
alpha2 ~ dunif(1e-5, 100)
sigma2 ~ dunif(1e-5, 100)
tau1 ~ dunif(0,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
sigma2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma2"]]
alpha2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha2"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
c("alpha1" = alpha1, "sigma1" = sigma1, "alpha2" = alpha2,
"sigma2" = sigma2, "tau1" = tau1)
}
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 15000)
plot_data_and_mean_1_cp <- function(current_cumulative, params) {
alpha1 <- params["alpha1"]
alpha2 <- params["alpha2"]
sigma1 <- params["sigma1"]
sigma2 <- params["sigma2"]
tau1 <- params["tau1"]
mean_to_tau <- function(t) { (t/sigma1)**alpha1 }
mean_to_end <- function(t) { ((tau1/sigma1)**alpha1+(t/sigma2)**alpha2-(tau1/sigma2)**alpha2) }
mean_1_cp <- c()
for (i in 1:length(current_cumulative)) {
mean_1_cp <- c(mean_1_cp, ifelse(i <= tau1, mean_to_tau(i), mean_to_end(i)))
}
plot(0,0,xlim = c(0,N), ylim = c(0, max(current_cumulative)), type = "n", main = "")
lines(stepfun(1:(length(current_cumulative)-1), current_cumulative),cex.points = 0.1, lwd=0, col = "#000000")
lines(stepfun(1:(length(mean_1_cp)-1),mean_1_cp), cex.points = 0.1, lwd=0, col = "#FF0000")
}
plot_data_and_mean_1_cp(current_cumulative, params)
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 30000)
plot_data_and_mean_1_cp(current_cumulative, params)
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 50000)
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 25000)
estimate_model_with_one_changepoint <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1", "alpha2", "sigma2", "tau1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
(i/sigma1)**alpha1,
(tau1/sigma1)**alpha1
+ (i/sigma2)**alpha2
- (tau1/sigma2)**alpha2
)
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
alpha2 ~ dunif(1e-5, 100)
sigma2 ~ dunif(1e-5, 100)
tau1 ~ dunif(0,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
sigma2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma2"]]
alpha2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha2"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
c("alpha1" = alpha1, "sigma1" = sigma1, "alpha2" = alpha2,
"sigma2" = sigma2, "tau1" = tau1)
}
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 100000)
initalize <- function(dir) {
library("R2jags")
library("readxl")
library("tidyverse")
library("poisson")
set.seed(42)
setwd(dir)
data <- read_excel("./Data/data.xlsx")
data <- select(data, -1)  # Drop first
}
#dir <- "/Users/marcelbraasch/RProjects/stochastic_processes/"
dir <- "/Users/marco/dev/stochastic_processes/"
data <- initalize(dir)
# Set which series to look at
names <- colnames(data)
N <- nrow(data)
current_name <- names[1]
create_single_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- data.frame(a = 1:N)
for (name in names) {
y <- c()
for (point in data[[name]]) {
y <- c(y, ifelse(point <= -1, 1, 0))
}
SPI_counted[name] <- y
}
SPI_counted <- subset(SPI_counted, select = -1)
}
single_counts <- create_single_counts(data)
create_cumulative_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
SPI_counted
}
cumulative_counts <- create_cumulative_counts(data)
current_cumulative <- cumulative_counts[[current_name]]
estimate_model_with_no_changepoints <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- (i/sigma1)^alpha1
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
c("alpha1" = alpha1, "sigma1" = sigma1)
}
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 15000)
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 20000)
estimate_model_with_no_changepoints <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- (i/sigma1)^alpha1
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 1, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
c("alpha1" = alpha1, "sigma1" = sigma1)
}
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 20000)
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 200000)
estimate_model_with_no_changepoints <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- (i/sigma1)^alpha1
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
c("alpha1" = alpha1, "sigma1" = sigma1)
}
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 20000)
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 15000)
get_params_0cp_without_recomputing <- function(name) {
if (name=="1 mÃªs") {
return <- c("alpha1" = 1.0526, "sigma1" = 7.5730)
} else if (name=="3 meses") {
return <- c("alpha1" = 1.0042, "sigma1" = 6.7560)
} else if (name=="6 meses") {
return <- c("alpha1" = 1.0498, "sigma1" = 8.8409)
} else if (name=="12 meses") {
return <- c("alpha1" = 1.2474, "sigma1" = 18.3014)
}
return
}
current_name <- names[5]
create_single_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- data.frame(a = 1:N)
for (name in names) {
y <- c()
for (point in data[[name]]) {
y <- c(y, ifelse(point <= -1, 1, 0))
}
SPI_counted[name] <- y
}
SPI_counted <- subset(SPI_counted, select = -1)
}
single_counts <- create_single_counts(data)
create_cumulative_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
SPI_counted
}
cumulative_counts <- create_cumulative_counts(data)
current_cumulative <- cumulative_counts[[current_name]]
estimate_model_with_no_changepoints <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- (i/sigma1)^alpha1
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
c("alpha1" = alpha1, "sigma1" = sigma1)
}
params <- estimate_model_with_no_changepoints(single_counts, current_name, burnin = 10000, iterations = 15000)
estimate_model_with_one_changepoint <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1", "alpha2", "sigma2", "tau1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
(i/sigma1)**alpha1,
(tau1/sigma1)**alpha1
+ (i/sigma2)**alpha2
- (tau1/sigma2)**alpha2
)
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
alpha2 ~ dunif(1e-5, 100)
sigma2 ~ dunif(1e-5, 100)
tau1 ~ dunif(0,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
sigma2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma2"]]
alpha2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha2"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
c("alpha1" = alpha1, "sigma1" = sigma1, "alpha2" = alpha2,
"sigma2" = sigma2, "tau1" = tau1)
}
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 15000)
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 20000)
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 30000)
estimate_model_with_one_changepoint <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("alpha1", "sigma1", "alpha2", "sigma2", "tau1")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- (1/sigma1)^alpha1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
(i/sigma1)**alpha1,
(tau1/sigma1)**alpha1
+ (i/sigma2)**alpha2
- (tau1/sigma2)**alpha2
)
}
alpha1 ~ dunif(1e-5, 100)
sigma1 ~ dunif(1e-5, 100)
alpha2 ~ dunif(1e-5, 100)
sigma2 ~ dunif(1e-5, 100)
tau1 ~ dunif(0,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
plp.mod.upd <- autojags(plp.mod.fit, n.chains = 3, n.iter = iterations, Rhat = 1.01)
print(plp.mod.fit)
print(plp.mod.upd)
sigma1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma1"]]
alpha1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha1"]]
sigma2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["sigma2"]]
alpha2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["alpha2"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
c("alpha1" = alpha1, "sigma1" = sigma1, "alpha2" = alpha2,
"sigma2" = sigma2, "tau1" = tau1)
}
params <- estimate_model_with_one_changepoint(single_counts, current_name, burnin = 10000, iterations = 15000)
initalize <- function(dir) {
library("R2jags")
library("readxl")
library("tidyverse")
library("poisson")
set.seed(42)
setwd(dir)
data <- read_excel("./Data/data.xlsx")
data <- select(data, -1)  # Drop first
}
#dir <- "/Users/marcelbraasch/RProjects/stochastic_processes/"
dir <- "/Users/marco/dev/stochastic_processes/"
data <- initalize(dir)
# Set which series to look at
names <- colnames(data)
N <- nrow(data)
current_name <- names[1]
create_single_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- data.frame(a = 1:N)
for (name in names) {
y <- c()
for (point in data[[name]]) {
y <- c(y, ifelse(point <= -1, 1, 0))
}
SPI_counted[name] <- y
}
SPI_counted <- subset(SPI_counted, select = -1)
}
single_counts <- create_single_counts(data)
create_cumulative_counts <- function(data) {
N <- nrow(data)
M <- ncol(data)
names <- colnames(data)
SPI_counted <- tibble(a = 1:N)
for (j in 1:M) {
d <- data[[j]]
name <- names[j]
counter <- 0
cumulative <- c()
for (i in 1:N) {
if (d[i] <= -1) { counter <- counter + 1}
cumulative <- c(cumulative, counter)
}
SPI_counted$x <- cumulative
names(SPI_counted)[ncol(SPI_counted)] <- names[j]  # Rename
}
SPI_counted
}
cumulative_counts <- create_cumulative_counts(data)
current_cumulative <- cumulative_counts[[current_name]]
estimate_linear_model_with_2cp <- function(counts, name, burnin, iterations) {
y <- counts[[name]]
plp.mod.params <- c("b1", "b2", "b3", "tau1", "tau2")
plp.mod.data <- list("y", "N")
plp.mod <- function() {
y[1] ~ dpois(m[1])
m[1] <- b1
for (i in 2:N) {
y[i] ~ dpois(m[i]-m[i-1])
m[i] <- ifelse(i<=tau1,
b1*i,
ifelse(i<=tau2,
(b1*tau1)+(b2*i)-(b2*tau1),
(b1*tau1)+(b2*tau2)-(b2*tau1)+(b3*i)-(b3*tau2)
)
)
}
b1 ~ dunif(1e-5, 100)
b2 ~ dunif(1e-5, 100)
b3 ~ dunif(1e-5, 100)
tau1 ~ dunif(400,600)
tau2 ~ dunif(600,N)
}
plp.mod.fit <- jags(data = plp.mod.data,
parameters.to.save = plp.mod.params,
n.chains = 3, n.iter = iterations,
n.burnin = burnin, model.file = plp.mod)
print(plp.mod.fit)
b1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["b1"]]
b2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["b2"]]
b3 <- plp.mod.fit$BUGSoutput[11][["mean"]][["b3"]]
tau1 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau1"]]
tau2 <- plp.mod.fit$BUGSoutput[11][["mean"]][["tau2"]]
c("b1" = b1, "b2" = b2, "b3" = b3,
"tau1" = tau1, "tau2" = tau2)
}
params <- estimate_linear_model_with_2cp(single_counts, current_name, 10000, 15000)
